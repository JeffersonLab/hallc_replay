Run #{gen_run_number}

**************************
* General Run Information
**************************

1 MhZ Pulses : {H.1Mhz.scaler}
Run Length   : {H.1Mhz.scalerTime:%.3f} sec

***********
* Beamline
***********
  
BCM1 Current: {H.BCM1.scalerCurrent:%.3f} uA		  
BCM2 Current: {H.BCM2.scalerCurrent:%.3f} uA		 
Unser Current: {H.Unser.scalerCurrent:%.3f} uA		  

With no cuts on BCM{gBCM_Current_threshold_index+1}.
BCM1 Counts: {H.BCM1.scaler}		Total Charge: {H.BCM1.scalerCharge:%.3f} uC
BCM2 Counts: {H.BCM2.scaler} 		Total Charge: {H.BCM2.scalerCharge:%.3f} uC	
Unser Counts: {H.Unser.scaler} 		Total Charge: {H.Unser.scalerCharge:%.3f} uC

Cut on BCM{gBCM_Current_threshold_index+1} current of {gBCM_Current_threshold} uA. Beam over threshold for {H.1Mhz.scalerTimeCut:%.3f}s, or {((H.1Mhz.scalerTimeCut/H.1Mhz.scalerTime)*100.):%.3f}% of total run time.
BCM1 Counts: {H.BCM1.scalerCut} 	Total Charge: {H.BCM1.scalerChargeCut:%.3f} uC
BCM2 Counts: {H.BCM2.scalerCut} 	Total Charge: {H.BCM2.scalerChargeCut:%.3f} uC
Unser Counts: {H.Unser.scalerCut} 	Total Charge: {H.Unser.scalerChargeCut:%.3f} uC

{hdc_plane_names}
Horizontal drift chamber z positions:
Chamber 1: {hdc_zpos[0]:%6.2f} {hdc_zpos[1]:%6.2f} {hdc_zpos[2]:%6.2f} 
           {hdc_zpos[3]:%6.2f} {hdc_zpos[4]:%6.2f} {hdc_zpos[5]:%6.2f} 
Chamber 2: {hdc_zpos[6]:%6.2f} {hdc_zpos[7]:%6.2f} {hdc_zpos[8]:%6.2f} 
           {hdc_zpos[9]:%6.2f} {hdc_zpos[10]:%6.2f} {hdc_zpos[11]:%6.2f}

HMS triggers:  {hms_trigs.npassed}

Hodo efficiency:
Plane 1: {hhodo_plane_AND_eff[0]}
Plane 2: {hhodo_plane_AND_eff[1]}
Plane 3: {hhodo_plane_AND_eff[2]}
Plane 4: {hhodo_plane_AND_eff[3]}

S1XY : {hhodo_s1XY_eff}
S2XY : {hhodo_s2XY_eff}

STOF: {hhodo_stof_eff}

3_of_4 EFF : {hhodo_3_of_4_eff}
4_of_4 EFF : {hhodo_4_of_4_eff}

Rate  :  {H.Trig.scalerRate/1000.:%7.3f} kHz

Live Time : {(hms_trigs.npassed / H.Trig.scaler)*100.0:%3.2f} %
Dead Time : {100.0 - (hms_trigs.npassed / H.Trig.scaler)*100.0:%3.2f} %

hmsDC1Planes_large  Counts:       {hmsDC1Planes_large.npassed} /hms_trigs : {hmsDC1Planes_large.npassed/hms_trigs.npassed}
hmsDC2Planes_large  Counts:	  {hmsDC2Planes_large.npassed}  /hms_trigs : {hmsDC2Planes_large.npassed/hms_trigs.npassed}  

hmsDC1Planes6     Counts: {hmsDC1Planes6hits.npassed} /hms_trigs : {hmsDC1Planes6hits.npassed/hms_trigs.npassed}
hmsDC2Planes6  	  Counts: {hmsDC2Planes6hits.npassed} /hms_trigs : {hmsDC2Planes6hits.npassed/hms_trigs.npassed}  

hmsDC1x1Planes5	  Counts: {hmsDC1_5hits_x1.npassed} eff : {hmsDC1_6hits_x1.npassed/hmsDC1_5hits_x1.npassed}
hmsDC1u1Planes5	  Counts: {hmsDC1_5hits_u1.npassed} eff : {hmsDC1_6hits_u1.npassed/hmsDC1_5hits_u1.npassed}
hmsDC1y2Planes5	  Counts: {hmsDC1_5hits_y2.npassed} eff : {hmsDC1_6hits_y2.npassed/hmsDC1_5hits_y2.npassed}
hmsDC1v1Planes5	  Counts: {hmsDC1_5hits_v1.npassed} eff : {hmsDC1_6hits_v1.npassed/hmsDC1_5hits_v1.npassed}
hmsDC1y1Planes5	  Counts: {hmsDC1_5hits_y1.npassed} eff : {hmsDC1_6hits_y1.npassed/hmsDC1_5hits_y1.npassed}
hmsDC1x2Planes5	  Counts: {hmsDC1_5hits_x2.npassed} eff : {hmsDC1_6hits_x2.npassed/hmsDC1_5hits_x2.npassed}


hmsDC2x1Planes5	  Counts: {hmsDC2_5hits_x1.npassed} eff : {hmsDC2_6hits_x1.npassed/hmsDC2_5hits_x1.npassed}
hmsDC2u1Planes5	  Counts: {hmsDC2_5hits_u1.npassed} eff : {hmsDC2_6hits_u1.npassed/hmsDC2_5hits_u1.npassed}
hmsDC2y2Planes5	  Counts: {hmsDC2_5hits_y2.npassed} eff : {hmsDC2_6hits_y2.npassed/hmsDC2_5hits_y2.npassed}
hmsDC2v1Planes5	  Counts: {hmsDC2_5hits_v1.npassed} eff : {hmsDC2_6hits_v1.npassed/hmsDC2_5hits_v1.npassed}
hmsDC2y1Planes5	  Counts: {hmsDC2_5hits_y1.npassed} eff : {hmsDC2_6hits_y1.npassed/hmsDC2_5hits_y1.npassed}
hmsDC2x2Planes5	  Counts: {hmsDC2_5hits_x2.npassed} eff : {hmsDC2_6hits_x2.npassed/hmsDC2_5hits_x2.npassed}
	       	                      	       
	       	   	       

*****************************
*HMS TRACKING EFFICIENCIES *
*****************************
htrig                          :   {hmscoin_event.npassed}
hhitslt = passed hits/cham     :   {hmsHitsLt.npassed}
hhitsplanes = +planes >= 5/6   :   {hmsHitsPlanes.npassed}
hhitsplanessps = + sps         :   {hSpacePoints.npassed}
hhitsplanesspsstubs +stub      :   {hSpacePointsStub.npassed}
hsfoundtrack                   :   {hFoundTrack.npassed}
hscleantrack                   :   {hCleanTrack.npassed}
hstublt = passed stub tests    :   {hStubLT.npassed}
h1hitslt                       :   {hms1HitsLt.npassed}
h2hitslt                       :   {hms2HitsLt.npassed}
h1planesgt                     :   {hmsDC1PlanesGT.npassed}
h2planesgt                     :   {hmsDC2PlanesGT.npassed}
hplanesgt = gt 5 planes/cham   :   {hmsPlanesGT.npassed}
f1hspacepoints                 :   {f1HSpacePoints.npassed}
f2hspacepoints                 :   {f2HSpacePoints.npassed}
htest1=p hits/planes, f sp     :   {hTest1.npassed}
htest2=p sp, f stubs           :   {hTest2.npassed}
hdid                           :   {HMSScinDid.npassed}
hdide                          :   {HMSScinDide.npassed}
hdidh                          :   {HMSScinDidh.npassed}
hscinshould                    :   {HMSScinShould.npassed}
hscinshoulde                   :   {HMSScinShoulde.npassed}
hscinshouldh                   :   {HMSScinShouldh.npassed}
SING FID TRACK EFFIC           : {HMSScinDid.npassed/(HMSScinShould.npassed+0.0001):%8.4f} +- {(sqrt(HMSScinShould.npassed-HMSScinDid.npassed)/(HMSScinShould.npassed+.0001)):%8.4f}
E SING FID TRACK EFFIC         : {HMSScinDide.npassed/(HMSScinShoulde.npassed+0.0001):%8.4f} +- {(sqrt(HMSScinShoulde.npassed-HMSScinDide.npassed)/(HMSScinShoulde.npassed+.0001)):%8.4f}
HADRON SING FID TRACK EFFIC    : {HMSScinDidh.npassed/(HMSScinShouldh.npassed+0.0001):%8.4f} +- {(sqrt(HMSScinShouldh.npassed-HMSScinDidh.npassed)/(HMSScinShouldh.npassed+.0001)):%8.4f}
